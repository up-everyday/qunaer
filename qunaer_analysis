import pandas
import numpy
from pyecharts import Geo,Bar,Map,Page
import requests

def make_bar(name, ordered_result):
    attr,value=[],[]
    #top 10
    for name_sale_elem in ordered_result:
        attr.append(name_sale_elem[0]) #name
        value.append(name_sale_elem[1]) #sale
    top_bar = Bar()
    top_bar.add(name, attr, value,
                #is_visualmap=True,
                visual_text_color='#fff',
                mark_point=["average"], mark_line=["average"],
                is_more_utils=True,
                is_label_show=True,
                is_datazoom_show=True,
                xaxis_rotate=45)
    return top_bar
def name_sale(resort_name, monthly_sales, grade):#看各级的销量
    name_sale_list=[]
    for i in range(len(resort_name)):
        if not numpy.isnan(monthly_sales[i]):
            name_sale_elem = []
            name_sale_elem.append(resort_name[i])
            name_sale_elem.append(monthly_sales[i])
            ##all
            name_sale_list.append(name_sale_elem)
    ordered_result=sorted(name_sale_list,
              key=lambda name_sale_elem:name_sale_elem[1], #1  -> monthly_sales
              reverse=True)
    page=Page()
    name = str(grade) + 'A景区月销量top10排行'
    top_bar = make_bar(name, ordered_result[:10])
    page.add_chart(top_bar)
    name = str(grade) + 'A景区月销量down10排行'
    down_bar = make_bar(name, ordered_result[-10:])
    page.add_chart(down_bar)

    page.render('5'+"A景区销量bar.html")

def data_visualization(geoinfo_file,attr, value):
    geo = Geo("5A景点分布", "数据来源去哪儿",title_color="#fff",
              title_pos="center", width=1200, height=600, background_color='#404a59')
    # add()数据及配置项
    info = pandas.read_csv(geoinfo_file, engine='python', encoding='utf-8',
                           header=None,
                           names=['city','lon_lat','level','name','province'])
    for longit_lat,spot_name in list(zip(info['lon_lat'], info['name'])):
        longitude, latitude = longit_lat.split(',')
        geo.add_coordinate(spot_name, longitude, latitude)

    geo.add("xx", attr, value, type="effectScatter", is_random=True, effect_scale=5)
    geo.render(path="my_first_bar.html")  # render() 生成 .html 文件

def geo_info(city, name, province, level):#高德地图可视化

    for i in range(len(name)):
        x = pandas.DataFrame()
        t={}
        add = name[i]
        chengshi=city[i]
        parameters = { 'address': add, 'key': '58b999a4af5042355d347fbf0227e1f3','city':chengshi }
        html = requests.get('https://restapi.amap.com/v3/geocode/geo', params=parameters).json()
        print(html)
        try:
            t['jingwei'] = html['geocodes'][0]['location']
        except IndexError:
            t['jingwei']='0,0'
        finally:
            t['n'] = name[i]
            t['level']=level[i]
            t['pro']=province[i]
            t['city']=city[i]
            x = x.append(t, ignore_index=True)
            x.to_csv('111.csv', encoding='utf-8', index=False, mode='a', header=False)
def info_by_grade(filename, grade):
    qunaer = pandas.read_csv(filename, engine='python', encoding='utf-8',
                             header=None,
                             names=['province', 'city', 'name', 'level', 'price', 'num','hot', 'comment'])
    province_li, city_li, name_li, level_li, price_li, num_li, hot_li, comment_li = [], [], [], [], [], [], [], []
    for province, city, name, level, price, num, hot, comment in \
            zip(qunaer['province'], qunaer['city'], qunaer['name'], qunaer['level'], qunaer['price'], qunaer['num'], qunaer['hot'], qunaer['comment']):
        if level == grade :
            province_li.append(province)
            city_li.append(city)
            name_li.append(name)
            level_li.append(level)
            price_li.append(price)
            num_li.append(num)
            hot_li.append(hot)
            comment_li.append(comment)
    #geo_info(city_li, name_li, province_li, level_li)
    geoinfo_file = r'D:/python_work/text_book/111.csv'
    data_visualization(geoinfo_file, name_li, num_li)
    #name_sale(name, num, grade)
    #money(name,price,k)
    #sum_pro(pro,k)
    return price, num,hot
if __name__ == '__main__':
    filename = r'D:/python_work/text_book/qunaer.csv'
    #read_data(filename)
    info_by_grade(filename, 5)
